name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [api-gateway, auth-service, order-service, crm-service, inventory-service, finance-service, analytics-service]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        if: ${{ matrix.service != 'analytics-service' }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/${{ matrix.service }}/package-lock.json
      
      - name: Set up Python
        if: ${{ matrix.service == 'analytics-service' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: backend/${{ matrix.service }}/requirements.txt
      
      - name: Install dependencies (Node.js)
        if: ${{ matrix.service != 'analytics-service' }}
        working-directory: backend/${{ matrix.service }}
        run: npm ci
      
      - name: Install dependencies (Python)
        if: ${{ matrix.service == 'analytics-service' }}
        working-directory: backend/${{ matrix.service }}
        run: pip install -r requirements.txt
      
      - name: Run tests (Node.js)
        if: ${{ matrix.service != 'analytics-service' }}
        working-directory: backend/${{ matrix.service }}
        run: npm test
      
      - name: Run tests (Python)
        if: ${{ matrix.service == 'analytics-service' }}
        working-directory: backend/${{ matrix.service }}
        run: pytest
  
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    strategy:
      matrix:
        service: [api-gateway, auth-service, order-service, crm-service, inventory-service, finance-service, analytics-service, frontend]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service == 'frontend' && 'frontend' || 'backend/'}}${{ matrix.service != 'frontend' && matrix.service || '' }}
          file: ./docker/production/${{ matrix.service == 'analytics-service' && 'python-service' || matrix.service == 'frontend' && 'frontend' || 'node-service' }}.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/erp-${{ matrix.service }}:${{ github.sha }}
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Deploy to Railway
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
